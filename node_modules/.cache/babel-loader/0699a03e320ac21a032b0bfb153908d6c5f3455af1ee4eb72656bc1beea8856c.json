{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\web - dev\\\\reactjs\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\n// components na folder ma navbar 6\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [modename, setModename] = useState('Enable Dark Mode');\n  // const[textcolor,setTextcolor]=useState('text-light')\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setModename('Enable Light Mode');\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"dark mode has been enable\", \"success\");\n      // setTextcolor('light')\n      document.title = \"Textutils-dark mode\";\n    } else {\n      setMode('light');\n      setModename('Enable Dark Mode');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enable\", \"success\");\n      document.title = \"Textutils-Light mode\";\n      // setTextcolor('dark')\n    }\n  };\n\n  const btn2 = () => {\n    if (mode === 'light') {\n      setMode('#9ac49a');\n      setModename('Enable Light Mode');\n      document.body.style.backgroundColor = \"#9ac49a\";\n      showAlert(\"dark mode has been enable\", \"success\");\n      // setTextcolor('light')\n    } else {\n      setMode('light');\n      setModename('Enable Dark Mode');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enable\", \"success\");\n      // setTextcolor('dark')\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"textutils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      modename: modename,\n      btn2: btn2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        mode: mode,\n        heading: \"Enter text to analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+XRF4Epn7ZlBEQoxS4TkYzH6AE0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","Alert","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","modename","setModename","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","btn2","children","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/web - dev/reactjs/myapp/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n// components na folder ma navbar 6\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n// import About from './components/About';\nimport Alert from './components/Alert';\n\nimport React,{ useState } from 'react';\nfunction App() {\n\n  const[mode,setMode]=useState('light');\n  const[modename,setModename]=useState('Enable Dark Mode')\n  // const[textcolor,setTextcolor]=useState('text-light')\n  const [alert,setAlert]=useState(null);\n  \n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n\n  }\n\n\n  const toggleMode=()=>{\n    if (mode==='light') {\n      setMode('dark')\n      setModename('Enable Light Mode')\n      document.body.style.backgroundColor=\"#042743\"\n      showAlert(\"dark mode has been enable\",\"success\")\n      // setTextcolor('light')\n      document.title=\"Textutils-dark mode\";\n    }\n    else\n    {\n      setMode('light')\n      setModename('Enable Dark Mode')\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"light mode has been enable\",\"success\")\n      document.title=\"Textutils-Light mode\";\n      // setTextcolor('dark')\n      \n    }\n  }\n  const btn2=()=>{\n    if (mode==='light') {\n      setMode('#9ac49a')\n      setModename('Enable Light Mode')\n      document.body.style.backgroundColor=\"#9ac49a\"\n      showAlert(\"dark mode has been enable\",\"success\")\n      // setTextcolor('light')\n    }\n    else\n    {\n      setMode('light')\n      setModename('Enable Dark Mode')\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"light mode has been enable\",\"success\")\n      // setTextcolor('dark')\n      \n    }\n  }\n\n\n  return (\n    <>\n    {/* aa ma je title use karyo 6 ae props tarike use thay 6 */}\n      {/* <Navbar title={3}></Navbar> */}\n      <Navbar title=\"textutils\" mode={mode} toggleMode={toggleMode} modename={modename} btn2={btn2} ></Navbar>\n      {/* <Navbar ></Navbar> */}\n\n\n      <Alert alert={alert}></Alert>\n\n\n      <div className=\"container my-3\">\n\n\n      <TextForm showAlert={showAlert} mode={mode} heading=\"Enter text to analyze\"></TextForm>\n\n\n      {/* <About></About> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}